#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
    tapping-term-ms = <200>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W             &kp E         &kp R                 &kp T                                                &kp Y        &kp U  &lt 5 I      &kp O              &kp P
&mt LEFT_ALT A  &mt LEFT_SHIFT S  &kp D         &mt K_FIND F          &kp G        &kp LS(LG(S))         &kp MINUS         &kp H        &kp J  &mt RCTRL K  &mt RIGHT_SHIFT L  &kp SEMICOLON
&kp Z           &kp X             &mt LCTRL C   &kp V                 &kp B        &lt 1 LANGUAGE_2      &lt 1 LANGUAGE_1  &lt 2 N      &kp M  &kp COMMA    &kp DOT            &kp SLASH
&none           &kp LEFT_WIN      &lt 7 K_FIND  &lt_to_layer_0 5 ESC  &lt 3 SPACE  &lt 7 N0              &kp BACKSPACE     &lt 2 ENTER                                         &kp BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        symbol {
            bindings = <
&none                             &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp TAB                        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL  &none   &none
&trans                            &kp DOLLAR       &kp PERCENT   &kp CARET             &kp APOS   &none       &trans  &kp LBKT              &kp RBKT               &kp MINUS  &none   &trans
&mt LEFT_SHIFT RIGHT_PARENTHESIS  &kp EXCLAMATION  &kp AT        &kp HASH              &kp GRAVE  &trans      &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans     &trans  &trans
&none                             &none            &none         &trans                &trans     &trans      &trans  &trans                                                          &trans
            >;
        };

        num {
            bindings = <
&trans  &kp N7  &kp N8  &kp N9  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &kp N4  &kp N5  &kp N6  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp N0  &kp N1  &kp N2  &kp N3  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        ARROW {
            bindings = <
&none   &none   &none   &none   &trans                      &trans    &kp HOME        &kp END       &trans     &trans
&none   &none   &none   &none   &none   &trans      &trans  &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans
&none   &none   &trans  &none   &trans  &trans      &trans  &trans    &trans          &trans        &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                             &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        function {
            bindings = <
&trans  &trans  &trans  &trans      &trans                      &kp F9  &kp F10  &kp F11  &kp F12  &trans
&trans  &trans  &trans  &kp K_FIND  &trans  &trans      &trans  &kp F5  &kp F6   &kp F7   &kp F8   &none
&none   &none   &none   &none       &trans  &trans      &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans  &trans  &trans  &trans      &trans  &trans      &trans  &trans                             &trans
            >;
        };

        bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &none   &none   &none   &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&none   &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
